{"version":3,"file":"static/js/604.f1ef6f7d.chunk.js","mappings":"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","sources":["Places/Pages/UpdatePlace.jsx","Shared/Components/FormElements/Input.js","Shared/Components/UIElements/Card.js","Shared/Components/UIElements/ErrorModal.js","Shared/Components/UIElements/Modal.jsx","Shared/hooks/form-hooks.js","Shared/hooks/http-hook.js","Shared/util/validators.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Input from \"../../Shared/Components/FormElements/Input\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport {\r\n   VALIDATOR_REQUIRE,\r\n   VALIDATOR_MINLENGTH,\r\n} from \"../../Shared/util/validators\";\r\nimport { useForm } from \"../../Shared/hooks/form-hooks\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nexport default function UpdatePlace() {\r\n   const auth = useContext(AuthContext);\r\n\r\n   const placeId = useParams().placeId;\r\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n   const [loadedPlace, setLoadedPlace] = useState();\r\n   const history = useHistory();\r\n   const [formState, inputHandler, setFormData] = useForm(\r\n      {\r\n         title: { value: \"\", isValid: false },\r\n         description: { value: \"\", isValid: false },\r\n      },\r\n      false\r\n   );\r\n\r\n   async function placeUpdateSubmitHandler(event) {\r\n      event.preventDefault();\r\n      try {\r\n         await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n            \"PATCH\",\r\n            JSON.stringify({\r\n               title: formState.inputs.title.value,\r\n               description: formState.inputs.description.value,\r\n            }),\r\n            {\r\n               \"Content-Type\": \"application/json\",\r\n               Authorization: \"Bearer \" + auth.token,\r\n            }\r\n         );\r\n         history.push(`/${auth.userId}/places`);\r\n      } catch (err) {}\r\n   }\r\n   useEffect(() => {\r\n      const fetchPlace = async () => {\r\n         try {\r\n            const responseData = await sendRequest(\r\n               `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n            );\r\n\r\n            setLoadedPlace(responseData.place);\r\n            setFormData({\r\n               title: { value: responseData.place.title, isValid: true },\r\n               description: {\r\n                  value: responseData.place.description,\r\n                  isValid: true,\r\n               },\r\n            });\r\n         } catch (err) {}\r\n      };\r\n      fetchPlace();\r\n   }, [sendRequest, placeId, setFormData]);\r\n\r\n   if (isLoading) {\r\n      return (\r\n         <div className=\"center\">\r\n            <LoadingSpinner />\r\n         </div>\r\n      );\r\n   }\r\n\r\n   if (!loadedPlace && !error)\r\n      return (\r\n         <div className=\"center\">\r\n            <Card>\r\n               <h2>Cound not find the place</h2>\r\n            </Card>\r\n         </div>\r\n      );\r\n\r\n   return (\r\n      <>\r\n         <ErrorModal error={error} onClear={clearError} />\r\n         {!isLoading && loadedPlace && (\r\n            <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n               <Input\r\n                  id=\"title\"\r\n                  element=\"input\"\r\n                  type=\"text\"\r\n                  label=\"Title\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  errorText=\"Please enter a valid title.\"\r\n                  onInput={inputHandler}\r\n                  initialValue={loadedPlace.title}\r\n                  initialValid={true}\r\n               ></Input>\r\n               <Input\r\n                  id=\"description\"\r\n                  element=\"textarea\"\r\n                  label=\"Description\"\r\n                  validators={[VALIDATOR_MINLENGTH(5)]}\r\n                  errorText=\"Please enter a valid description (at least 5 characters).\"\r\n                  onInput={inputHandler}\r\n                  initialValue={loadedPlace.description}\r\n                  initialValid={true}\r\n               ></Input>\r\n               <Button type=\"submit\" disabled={!formState.isValid}>\r\n                  UPDATE PLACE\r\n               </Button>\r\n            </form>\r\n         )}\r\n      </>\r\n   );\r\n}\r\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n   return (\n      <Modal\n         onCancel={props.onClear}\n         header=\"An Error Occurred!\"\n         show={!!props.error}\n         footer={<Button onClick={props.onClear}>Okay</Button>}\n      >\n         <p>{props.error}</p>\n      </Modal>\n   );\n};\n\nexport default ErrorModal;\n","import ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\nconst ModalOverlay = (props) => {\r\n   const content = (\r\n      <div className={`modal ${props.className}`} style={props.style}>\r\n         <header className={`modal__header ${props.headerClass}`}>\r\n            <h2>{props.header}</h2>\r\n         </header>\r\n         <form\r\n            onSubmit={\r\n               props.onSubmit\r\n                  ? props.onSubmit\r\n                  : (event) => event.preventDefault()\r\n            }\r\n         >\r\n            <div className={`modal__content ${props.contentClass}`}>\r\n               {props.children}\r\n            </div>\r\n            <footer className={`modal__footer ${props.footerClass}`}>\r\n               {props.footer}\r\n            </footer>\r\n         </form>\r\n      </div>\r\n   );\r\n   return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\nexport default function Modal(props) {\r\n   return (\r\n      <>\r\n         {props.show && <Backdrop onClick={props.onCancel} />}\r\n         <CSSTransition\r\n            in={props.show}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={200}\r\n            classNames=\"modal\"\r\n         >\r\n            <ModalOverlay {...props} />\r\n         </CSSTransition>\r\n      </>\r\n   );\r\n}\r\n","import { useCallback, useReducer } from \"react\";\r\nconst formReducer = (state, action) => {\r\n   switch (action.type) {\r\n      case \"INPUT_CHANGE\":\r\n         let formIsValid = true;\r\n         for (const inputId in state.inputs) {\r\n            if (!state.inputs[inputId]) continue;\r\n            formIsValid =\r\n               formIsValid &&\r\n               (inputId === action.inputId\r\n                  ? action.isValid\r\n                  : state.inputs[inputId].isValid);\r\n         }\r\n         return {\r\n            ...state,\r\n            inputs: {\r\n               ...state.inputs,\r\n               [action.inputId]: {\r\n                  value: action.value,\r\n                  isValid: action.isValid,\r\n               },\r\n            },\r\n            isValid: formIsValid,\r\n         };\r\n      case \"SET_DATA\":\r\n         return {\r\n            inputs: action.inputs,\r\n            isValid: action.formIsValid,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport function useForm(initialInputs, initialFormValidity) {\r\n   const [formState, dispatch] = useReducer(formReducer, {\r\n      inputs: initialInputs,\r\n      isValid: initialFormValidity,\r\n   });\r\n   const inputHandler = useCallback((id, value, isValid) => {\r\n      dispatch({\r\n         type: \"INPUT_CHANGE\",\r\n         value: value,\r\n         isValid: isValid,\r\n         inputId: id,\r\n      });\r\n   }, []);\r\n   const setFormData = useCallback((inputData, formValidity) => {\r\n      dispatch({\r\n         type: \"SET_DATA\",\r\n         inputs: inputData,\r\n         formIsValid: formValidity,\r\n      });\r\n   }, []);\r\n   return [formState, inputHandler, setFormData];\r\n}\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nexport function useHttpClient() {\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const activeHttpRequests = useRef([]);\r\n   const sendRequest = useCallback(\r\n      async (url, method = \"GET\", body = null, headers = {}) => {\r\n         setIsLoading(true);\r\n         const httpAbortCtrl = new AbortController();\r\n         activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n         try {\r\n            const response = await fetch(url, {\r\n               method,\r\n               body,\r\n               headers,\r\n               signal: httpAbortCtrl.signal,\r\n            });\r\n            const data = await response.json();\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n               (re) => re !== httpAbortCtrl\r\n            );\r\n            if (!response.ok) throw new Error(data.message);\r\n            setIsLoading(false);\r\n            return data;\r\n         } catch (err) {\r\n            if (err.message !== \"The user aborted a request.\") {\r\n               setError(err.message);\r\n               setIsLoading(false);\r\n               throw error;\r\n            }\r\n         }\r\n      },\r\n      [error]\r\n   );\r\n   function clearError() {\r\n      setError(null);\r\n   }\r\n   useEffect(() => {\r\n      return () => {\r\n         try {\r\n            activeHttpRequests.current.forEach((abortCtrl) =>\r\n               abortCtrl.abort()\r\n            );\r\n         } catch (err) {}\r\n      };\r\n   }, []);\r\n   return { isLoading, error, sendRequest, clearError };\r\n}\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n   type: VALIDATOR_TYPE_MINLENGTH,\r\n   val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n   type: VALIDATOR_TYPE_MAXLENGTH,\r\n   val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n   let isValid = true;\r\n   for (const validator of validators) {\r\n      if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n         isValid = isValid && value.trim().length > 0;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n         isValid = isValid && value.trim().length >= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n         isValid = isValid && value.trim().length <= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MIN) {\r\n         isValid = isValid && +value >= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MAX) {\r\n         isValid = isValid && +value <= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n         isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n      }\r\n   }\r\n   return isValid;\r\n};\r\n"],"names":["UpdatePlace","auth","useContext","AuthContext","placeId","useParams","isLoading","error","sendRequest","clearError","useHttpClient","loadedPlace","setLoadedPlace","useState","history","useHistory","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","concat","process","place","err","fetchPlace","_jsx","className","children","LoadingSpinner","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","inputReducer","state","action","val","validate","isTouched","props","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","onClick","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","data","json","filter","re","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}