{"version":3,"file":"static/js/563.f2bacebe.chunk.js","mappings":"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","sources":["Places/Pages/NewPlace.jsx","Shared/Components/FormElements/ImageUpload.jsx","Shared/Components/FormElements/Input.js","Shared/Components/UIElements/ErrorModal.js","Shared/Components/UIElements/Modal.jsx","Shared/hooks/form-hooks.js","Shared/hooks/http-hook.js","Shared/util/validators.js"],"sourcesContent":["import { useForm } from \"../../Shared/hooks/form-hooks\";\r\nimport { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport Input from \"../../Shared/Components/FormElements/Input\";\r\nimport {\r\n   VALIDATOR_MINLENGTH,\r\n   VALIDATOR_REQUIRE,\r\n} from \"../../Shared/util/validators\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport ImageUpload from \"../../Shared/Components/FormElements/ImageUpload\";\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nexport default function NewPlace() {\r\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n   const auth = useContext(AuthContext);\r\n   const [formState, inputHandler] = useForm(\r\n      {\r\n         title: { value: \"\", isValid: false },\r\n         description: { value: \"\", isValid: false },\r\n         address: { value: \"\", isValid: false },\r\n         image: { value: null, isValid: false },\r\n      },\r\n      false\r\n   );\r\n   const history = useHistory();\r\n   async function placeSubmitHandler(event) {\r\n      event.preventDefault();\r\n      try {\r\n         const formData = new FormData();\r\n         formData.append(\"title\", formState.inputs.title.value);\r\n         formData.append(\"description\", formState.inputs.description.value);\r\n         formData.append(\"address\", formState.inputs.address.value);\r\n         formData.append(\"image\", formState.inputs.image.value);\r\n         await sendRequest(\r\n            process.env.REACT_APP_BACKEND_URL + \"/places\",\r\n            \"POST\",\r\n            formData,\r\n            { Authorization: \"Bearer \" + auth.token }\r\n         );\r\n         history.push(\"/\");\r\n         //redirect\r\n      } catch (err) {}\r\n   }\r\n   return (\r\n      <>\r\n         <ErrorModal error={error} onClear={clearError} />\r\n\r\n         <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <Input\r\n               id=\"title\"\r\n               element=\"input\"\r\n               type=\"text\"\r\n               label=\"Title\"\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText=\"Please enter a valid title.\"\r\n               onInput={inputHandler}\r\n            />\r\n            <Input\r\n               id=\"description\"\r\n               element=\"textarea\"\r\n               label=\"Description\"\r\n               validators={[VALIDATOR_MINLENGTH(5)]}\r\n               errorText=\"Please enter a valid description(at least 5 characters).\"\r\n               onInput={inputHandler}\r\n            />\r\n            <Input\r\n               id=\"address\"\r\n               element=\"input\"\r\n               label=\"Address\"\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText=\"Please enter a valid address.\"\r\n               onInput={inputHandler}\r\n            />\r\n            <ImageUpload\r\n               id=\"image\"\r\n               onInput={inputHandler}\r\n               errorText=\"Please provide an image.\"\r\n            />\r\n            <Button type=\"submit\" disabled={!formState.isValid}>\r\n               ADD PLACE\r\n            </Button>\r\n         </form>\r\n      </>\r\n   );\r\n}\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nexport default function ImageUpload(props) {\r\n   const [file, setFile] = useState();\r\n   const [previewUrl, setPreviewUrl] = useState();\r\n   const [isValid, setIsValid] = useState(false);\r\n   const filePickerRef = useRef();\r\n   function pickedHandler(event) {\r\n      let pickedFile;\r\n      let fileIsValid = isValid;\r\n      if (event.target.files || event.target.files.length === 1) {\r\n         pickedFile = event.target.files[0];\r\n         setFile(pickedFile);\r\n         setIsValid(true);\r\n         fileIsValid = true;\r\n      } else {\r\n         setIsValid(false);\r\n         fileIsValid = false;\r\n      }\r\n      props.onInput(props.id, pickedFile, fileIsValid);\r\n   }\r\n   function pickImageHandler() {\r\n      filePickerRef.current.click();\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (!file) return;\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n         setPreviewUrl(fileReader.result);\r\n      };\r\n      fileReader.readAsDataURL(file);\r\n   }, [file]);\r\n\r\n   return (\r\n      <div className=\"form-control\">\r\n         <input\r\n            id={props.id}\r\n            style={{ display: \"none\" }}\r\n            ref={filePickerRef}\r\n            type=\"file\"\r\n            accept=\".jpg,.png,.jpeg\"\r\n            onChange={pickedHandler}\r\n         />\r\n         <div className={`image-upload ${props.center && \"center\"}`}>\r\n            <div className=\"image-upload__preview\">\r\n               {previewUrl ? (\r\n                  <img src={previewUrl} alt=\"preview\" />\r\n               ) : (\r\n                  <p>Please pick an image.</p>\r\n               )}\r\n            </div>\r\n            <Button type=\"button\" onClick={pickImageHandler}>\r\n               PICK IMAGE\r\n            </Button>\r\n         </div>\r\n         {!isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n   );\r\n}\r\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n   return (\n      <Modal\n         onCancel={props.onClear}\n         header=\"An Error Occurred!\"\n         show={!!props.error}\n         footer={<Button onClick={props.onClear}>Okay</Button>}\n      >\n         <p>{props.error}</p>\n      </Modal>\n   );\n};\n\nexport default ErrorModal;\n","import ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\nconst ModalOverlay = (props) => {\r\n   const content = (\r\n      <div className={`modal ${props.className}`} style={props.style}>\r\n         <header className={`modal__header ${props.headerClass}`}>\r\n            <h2>{props.header}</h2>\r\n         </header>\r\n         <form\r\n            onSubmit={\r\n               props.onSubmit\r\n                  ? props.onSubmit\r\n                  : (event) => event.preventDefault()\r\n            }\r\n         >\r\n            <div className={`modal__content ${props.contentClass}`}>\r\n               {props.children}\r\n            </div>\r\n            <footer className={`modal__footer ${props.footerClass}`}>\r\n               {props.footer}\r\n            </footer>\r\n         </form>\r\n      </div>\r\n   );\r\n   return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\nexport default function Modal(props) {\r\n   return (\r\n      <>\r\n         {props.show && <Backdrop onClick={props.onCancel} />}\r\n         <CSSTransition\r\n            in={props.show}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={200}\r\n            classNames=\"modal\"\r\n         >\r\n            <ModalOverlay {...props} />\r\n         </CSSTransition>\r\n      </>\r\n   );\r\n}\r\n","import { useCallback, useReducer } from \"react\";\r\nconst formReducer = (state, action) => {\r\n   switch (action.type) {\r\n      case \"INPUT_CHANGE\":\r\n         let formIsValid = true;\r\n         for (const inputId in state.inputs) {\r\n            if (!state.inputs[inputId]) continue;\r\n            formIsValid =\r\n               formIsValid &&\r\n               (inputId === action.inputId\r\n                  ? action.isValid\r\n                  : state.inputs[inputId].isValid);\r\n         }\r\n         return {\r\n            ...state,\r\n            inputs: {\r\n               ...state.inputs,\r\n               [action.inputId]: {\r\n                  value: action.value,\r\n                  isValid: action.isValid,\r\n               },\r\n            },\r\n            isValid: formIsValid,\r\n         };\r\n      case \"SET_DATA\":\r\n         return {\r\n            inputs: action.inputs,\r\n            isValid: action.formIsValid,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport function useForm(initialInputs, initialFormValidity) {\r\n   const [formState, dispatch] = useReducer(formReducer, {\r\n      inputs: initialInputs,\r\n      isValid: initialFormValidity,\r\n   });\r\n   const inputHandler = useCallback((id, value, isValid) => {\r\n      dispatch({\r\n         type: \"INPUT_CHANGE\",\r\n         value: value,\r\n         isValid: isValid,\r\n         inputId: id,\r\n      });\r\n   }, []);\r\n   const setFormData = useCallback((inputData, formValidity) => {\r\n      dispatch({\r\n         type: \"SET_DATA\",\r\n         inputs: inputData,\r\n         formIsValid: formValidity,\r\n      });\r\n   }, []);\r\n   return [formState, inputHandler, setFormData];\r\n}\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nexport function useHttpClient() {\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const activeHttpRequests = useRef([]);\r\n   const sendRequest = useCallback(\r\n      async (url, method = \"GET\", body = null, headers = {}) => {\r\n         setIsLoading(true);\r\n         const httpAbortCtrl = new AbortController();\r\n         activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n         try {\r\n            const response = await fetch(url, {\r\n               method,\r\n               body,\r\n               headers,\r\n               signal: httpAbortCtrl.signal,\r\n            });\r\n            const data = await response.json();\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n               (re) => re !== httpAbortCtrl\r\n            );\r\n            if (!response.ok) throw new Error(data.message);\r\n            setIsLoading(false);\r\n            return data;\r\n         } catch (err) {\r\n            if (err.message !== \"The user aborted a request.\") {\r\n               setError(err.message);\r\n               setIsLoading(false);\r\n               throw error;\r\n            }\r\n         }\r\n      },\r\n      [error]\r\n   );\r\n   function clearError() {\r\n      setError(null);\r\n   }\r\n   useEffect(() => {\r\n      return () => {\r\n         try {\r\n            activeHttpRequests.current.forEach((abortCtrl) =>\r\n               abortCtrl.abort()\r\n            );\r\n         } catch (err) {}\r\n      };\r\n   }, []);\r\n   return { isLoading, error, sendRequest, clearError };\r\n}\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n   type: VALIDATOR_TYPE_MINLENGTH,\r\n   val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n   type: VALIDATOR_TYPE_MAXLENGTH,\r\n   val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n   let isValid = true;\r\n   for (const validator of validators) {\r\n      if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n         isValid = isValid && value.trim().length > 0;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n         isValid = isValid && value.trim().length >= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n         isValid = isValid && value.trim().length <= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MIN) {\r\n         isValid = isValid && +value >= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_MAX) {\r\n         isValid = isValid && +value <= validator.val;\r\n      }\r\n      if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n         isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n      }\r\n   }\r\n   return isValid;\r\n};\r\n"],"names":["NewPlace","isLoading","error","sendRequest","clearError","useHttpClient","auth","useContext","AuthContext","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","err","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","style","display","ref","accept","onChange","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","data","json","filter","re","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}