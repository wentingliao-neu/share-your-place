{"version":3,"file":"static/js/227.3e4a8320.chunk.js","mappings":"iLAGA,MAmBA,EAnBaA,IACV,MAAM,OAAEC,EAAM,KAAEC,GAASF,GACzBG,EAAAA,EAAAA,YAAU,KACP,MAAMC,EAAM,IAAIC,OAAOC,OAAOC,KAAKC,IAAIC,EAAOC,QAAS,CACpDT,OAAQA,EACRC,KAAMA,IAET,IAAIG,OAAOC,OAAOC,KAAKI,OAAO,CAAEC,SAAUZ,EAAMC,OAAQG,IAAKA,GAAM,GACnE,CAACJ,EAAMC,OAAQD,EAAME,KAAMD,EAAQC,IACtC,MAAMO,GAASI,EAAAA,EAAAA,UAEf,OACGC,EAAAA,EAAAA,KAAA,OACGC,IAAKN,EACLO,UAAS,OAAAC,OAASjB,EAAMgB,WACxBE,MAAOlB,EAAMkB,OACT,E,uCCTE,SAASC,EAASC,GAAuB,IAAtB,MAAEC,EAAK,SAAEC,GAAUF,EAClD,MAAMG,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAClB,UAAEC,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MAC/CC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAkBC,IAAuBF,EAAAA,EAAAA,WAAS,GAEnDG,EAAkBA,IAAMJ,GAAW,GAIzC,SAASK,IACNF,GAAoB,EACvB,CAYA,OACGG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACG1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAACd,MAAOA,EAAOe,QAASb,KACnCf,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CACHC,KAAMb,EACNc,SAAUT,EACVU,OAAQzB,EAAM0B,QACdC,aAAa,4BACbC,YAAY,4BACZC,QAAQpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACC,QAAShB,EAAgBI,SAAC,UAAeA,UAEzD1B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAewB,UAC3B1B,EAAAA,EAAAA,KAACN,EAAG,CAACP,OAAQoB,EAAMgC,SAAUnD,KAAM,UAGzCY,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CACHC,KAAMV,EACNW,SAAUR,EACVS,OAAO,gBACPG,YAAY,4BACZC,QACGZ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACG1B,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACG,SAAO,EAACF,QAASf,EAAoBG,SAAC,YAG9C1B,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACI,QAAM,EAACH,QApC9BI,iBACGrB,GAAoB,SACdP,EAAY,GAADX,OACXwC,sDAAiC,YAAAxC,OAAWI,EAAMqC,IACrD,SACA,KACA,CAAEC,cAAe,UAAYpC,EAAKqC,QAErCtC,EAASD,EAAMqC,GAClB,EA2B4DlB,SAAC,cAInDA,UAED1B,EAAAA,EAAAA,KAAA,KAAA0B,SAAG,qGAKN1B,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYwB,UACvBF,EAAAA,EAAAA,MAACuB,EAAAA,EAAI,CAAC7C,UAAU,sBAAqBwB,SAAA,CACjCd,IAAaZ,EAAAA,EAAAA,KAACgD,EAAAA,EAAc,CAACC,WAAS,KACvCjD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBwB,UAC/B1B,EAAAA,EAAAA,KAAA,OAAKkD,IAAK3C,EAAM4C,MAAOC,IAAK7C,EAAM8C,WAErC7B,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,mBAAkBwB,SAAA,EAC9B1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAKnB,EAAM8C,SACXrD,EAAAA,EAAAA,KAAA,MAAA0B,SAAKnB,EAAM0B,WACXjC,EAAAA,EAAAA,KAAA,KAAA0B,SAAInB,EAAM+C,kBAEb9B,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,sBAAqBwB,SAAA,EACjC1B,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACkB,SAAO,EAACjB,QAnERkB,IAAMtC,GAAW,GAmEeQ,SAAC,gBAGxCjB,EAAKgD,SAAWlD,EAAMmD,UACpBlC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACG1B,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACsB,GAAE,WAAAxD,OAAaI,EAAMqC,IAAKlB,SAAC,UACnC1B,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACI,QAAM,EAACH,QAvEpC,WACGjB,GAAoB,EACvB,EAqEsEK,SAAC,wBAU1E,CC9Fe,SAASkC,EAAU1E,GAC/B,OAA2B,IAAvBA,EAAM2E,MAAMC,QAEV9D,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBwB,UAC/BF,EAAAA,EAAAA,MAACuB,EAAAA,EAAI,CAAArB,SAAA,EACF1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,wCACJ1B,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACsB,GAAG,cAAajC,SAAC,sBAM/B1B,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYwB,SACtBxC,EAAM2E,MAAMvE,KAAKyE,IACf/D,EAAAA,EAAAA,KAACK,EAAS,CAEPE,MAAOwD,EACPvD,SAAUtB,EAAM8E,eAFXD,EAAKnB,OAQ5B,C,YCpBA,MAsCA,EAtCmBqB,KAChB,MAAMR,GAASS,EAAAA,EAAAA,MAAYT,QACrB,UAAE7C,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MAC/CmD,EAAcC,IAAmBjD,EAAAA,EAAAA,YAkBxC,OAjBA9B,EAAAA,EAAAA,YAAU,MACPqD,iBACG,IACG,MAAM2B,QAAavD,EAAY,GAADX,OACxBwC,sDAAiC,iBAAAxC,OAAgBsD,IAEvDW,EAAgBC,EAAKC,OACxB,CAAE,MAAOC,GAAM,CAClB,CACAC,EAAa,GACb,CAAC1D,EAAa2C,KAQdjC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACG1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAACd,MAAOA,EAAOe,QAASb,IAClCH,IACEZ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQwB,UACpB1B,EAAAA,EAAAA,KAACgD,EAAAA,EAAc,OAGnBpC,GAAauD,IACZnE,EAAAA,EAAAA,KAAC4D,EAAS,CACPC,MAAOM,EACPH,cAhBZ,SAA6BS,GAC1BL,GAAiBM,GACdA,EAAWC,QAAQC,GAAMA,EAAEhC,KAAO6B,KAExC,MAeM,C,qDCtCT,MAQA,EARavF,IAETc,EAAAA,EAAAA,KAAA,OAAKE,UAAS,QAAAC,OAAUjB,EAAMgB,WAAaE,MAAOlB,EAAMkB,MAAMsB,SAC3DxC,EAAMwC,U,uECFb,MAaA,EAboBxC,IAEdc,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CACHE,SAAU7C,EAAM0C,QAChBI,OAAO,qBACPF,OAAQ5C,EAAM2B,MACduB,QAAQpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACC,QAASpD,EAAM0C,QAAQF,SAAC,SAAcA,UAEtD1B,EAAAA,EAAAA,KAAA,KAAA0B,SAAIxC,EAAM2B,S,yECTnB,MAAMgE,EAAgB3F,IACnB,MAAM4F,GACHtD,EAAAA,EAAAA,MAAA,OAAKtB,UAAS,SAAAC,OAAWjB,EAAMgB,WAAaE,MAAOlB,EAAMkB,MAAMsB,SAAA,EAC5D1B,EAAAA,EAAAA,KAAA,UAAQE,UAAS,iBAAAC,OAAmBjB,EAAM6F,aAAcrD,UACrD1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAKxC,EAAM8C,YAEdR,EAAAA,EAAAA,MAAA,QACGwD,SACG9F,EAAM8F,SACD9F,EAAM8F,SACLC,GAAUA,EAAMC,iBACxBxD,SAAA,EAED1B,EAAAA,EAAAA,KAAA,OAAKE,UAAS,kBAAAC,OAAoBjB,EAAMgD,cAAeR,SACnDxC,EAAMwC,YAEV1B,EAAAA,EAAAA,KAAA,UAAQE,UAAS,iBAAAC,OAAmBjB,EAAMiD,aAAcT,SACpDxC,EAAMkD,eAKnB,OAAO+C,EAAAA,aAAsBL,EAASM,SAASC,eAAe,cAAc,EAEhE,SAASxD,EAAM3C,GAC3B,OACGsC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACIxC,EAAM4C,OAAQ9B,EAAAA,EAAAA,KAACsF,EAAAA,EAAQ,CAAChD,QAASpD,EAAM6C,YACxC/B,EAAAA,EAAAA,KAACuF,EAAAA,EAAa,CACXC,GAAItG,EAAM4C,KACV2D,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAOlE,UAElB1B,EAAAA,EAAAA,KAAC6E,EAAY,IAAK3F,QAI9B,C,6CC1CO,SAAS8B,IACb,MAAOJ,EAAWiF,IAAgB1E,EAAAA,EAAAA,WAAS,IACpCN,EAAOiF,IAAY3E,EAAAA,EAAAA,UAAS,MAC7B4E,GAAqBhG,EAAAA,EAAAA,QAAO,IAC5Be,GAAckF,EAAAA,EAAAA,cACjBtD,eAAOuD,GAAoD,IAA/CC,EAAMC,UAAArC,OAAA,QAAAsC,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAOE,EAAIF,UAAArC,OAAA,QAAAsC,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAOH,UAAArC,OAAA,QAAAsC,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjDN,GAAa,GACb,MAAMU,EAAgB,IAAIC,gBAC1BT,EAAmBnG,QAAQ6G,KAAKF,GAEhC,IACG,MAAMG,QAAiBC,MAAMV,EAAK,CAC/BC,SACAG,OACAC,UACAM,OAAQL,EAAcK,SAEnBvC,QAAaqC,EAASG,OAI5B,GAHAd,EAAmBnG,QAAUmG,EAAmBnG,QAAQ+E,QACpDmC,GAAOA,IAAOP,KAEbG,EAASK,GAAI,MAAM,IAAIC,MAAM3C,EAAK4C,SAEvC,OADApB,GAAa,GACNxB,CACV,CAAE,MAAOE,GACN,GAAoB,gCAAhBA,EAAI0C,QAGL,MAFAnB,EAASvB,EAAI0C,SACbpB,GAAa,GACPhF,CAEZ,CACH,GACA,CAACA,IAcJ,OATAxB,EAAAA,EAAAA,YAAU,IACA,KACJ,IACG0G,EAAmBnG,QAAQsH,SAASC,GACjCA,EAAUC,SAEhB,CAAE,MAAO7C,GAAM,IAElB,IACI,CAAE3D,YAAWC,QAAOC,cAAaC,WAZxC,WACG+E,EAAS,KACZ,EAWH,C","sources":["Shared/Components/UIElements/Map.jsx","Places/Components/PlaceItem.jsx","Places/Components/PlaceList.jsx","Places/Pages/UserPlaces.jsx","Shared/Components/UIElements/Card.js","Shared/Components/UIElements/ErrorModal.js","Shared/Components/UIElements/Modal.jsx","Shared/hooks/http-hook.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n   const { center, zoom } = props;\r\n   useEffect(() => {\r\n      const map = new window.google.maps.Map(mapRef.current, {\r\n         center: center,\r\n         zoom: zoom,\r\n      });\r\n      new window.google.maps.Marker({ position: props.center, map: map });\r\n   }, [props.center, props.zoom, center, zoom]);\r\n   const mapRef = useRef();\r\n\r\n   return (\r\n      <div\r\n         ref={mapRef}\r\n         className={`map ${props.className}`}\r\n         style={props.style}\r\n      ></div>\r\n   );\r\n};\r\nexport default Map;\r\n","import Card from \"../../Shared/Components/UIElements/Card\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport Modal from \"../../Shared/Components/UIElements/Modal\";\r\nimport Map from \"../../Shared/Components/UIElements/Map\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\nimport \"./PlaceItem.css\";\r\nimport { useState, useContext } from \"react\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nexport default function PlaceItem({ place, onDelete }) {\r\n   const auth = useContext(AuthContext);\r\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n   const [showMap, setShowMap] = useState(false);\r\n   const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n   const openMapHandler = () => setShowMap(true);\r\n   const closeMapHandler = () => setShowMap(false);\r\n   function showDeleteWarningHandler() {\r\n      setShowConfirmModal(true);\r\n   }\r\n   function cancelDeleteHandler() {\r\n      setShowConfirmModal(false);\r\n   }\r\n   async function confirmDeleteHandler() {\r\n      setShowConfirmModal(false);\r\n      await sendRequest(\r\n         `${process.env.REACT_APP_BACKEND_URL}/places/${place.id}`,\r\n         \"DELETE\",\r\n         null,\r\n         { Authorization: \"Bearer \" + auth.token }\r\n      );\r\n      onDelete(place.id);\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <ErrorModal error={error} onClear={clearError} />\r\n         <Modal\r\n            show={showMap}\r\n            onCancel={closeMapHandler}\r\n            header={place.address}\r\n            contentClass=\"place-item__modal-content\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n         >\r\n            <div className=\"map-container\">\r\n               <Map center={place.location} zoom={16} />\r\n            </div>\r\n         </Modal>\r\n         <Modal\r\n            show={showConfirmModal}\r\n            onCancel={cancelDeleteHandler}\r\n            header=\"Are you sure?\"\r\n            footerClass=\"place-item__modal-actions\"\r\n            footer={\r\n               <>\r\n                  <Button reverse onClick={cancelDeleteHandler}>\r\n                     CANCEL\r\n                  </Button>\r\n                  <Button danger onClick={confirmDeleteHandler}>\r\n                     DELETE\r\n                  </Button>\r\n               </>\r\n            }\r\n         >\r\n            <p>\r\n               Do you want to proceed and delete this place? Please note that it\r\n               can't be undone thereafter.\r\n            </p>\r\n         </Modal>\r\n         <li className=\"place-item\">\r\n            <Card className=\"place-item__content\">\r\n               {isLoading && <LoadingSpinner asOverlay />}\r\n               <div className=\"place-item__image\">\r\n                  <img src={place.image} alt={place.title} />\r\n               </div>\r\n               <div className=\"place-item__info\">\r\n                  <h2>{place.title}</h2>\r\n                  <h3>{place.address}</h3>\r\n                  <p>{place.description}</p>\r\n               </div>\r\n               <div className=\"place-item__actions\">\r\n                  <Button inverse onClick={openMapHandler}>\r\n                     VIEW ON MAP\r\n                  </Button>\r\n                  {auth.userId === place.creator && (\r\n                     <>\r\n                        <Button to={`/places/${place.id}`}>EDIT</Button>\r\n                        <Button danger onClick={showDeleteWarningHandler}>\r\n                           DELETE\r\n                        </Button>\r\n                     </>\r\n                  )}\r\n               </div>\r\n            </Card>\r\n         </li>\r\n      </>\r\n   );\r\n}\r\n","import Card from \"../../Shared/Components/UIElements/Card\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport \"./PlaceList.css\";\r\nexport default function PlaceList(props) {\r\n   if (props.items.length === 0) {\r\n      return (\r\n         <div className=\"place-list center\">\r\n            <Card>\r\n               <h2>No places found. Maybe Create one?</h2>\r\n               <Button to=\"/places/new\">Share Place</Button>\r\n            </Card>\r\n         </div>\r\n      );\r\n   } else {\r\n      return (\r\n         <ul className=\"place-list\">\r\n            {props.items.map((item) => (\r\n               <PlaceItem\r\n                  key={item.id}\r\n                  place={item}\r\n                  onDelete={props.onDeletePlace}\r\n               />\r\n            ))}\r\n         </ul>\r\n      );\r\n   }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PlaceList from \"../Components/PlaceList\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\n\r\nconst UserPlaces = () => {\r\n   const userId = useParams().userId;\r\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n   const [loadedPlaces, setLoadedPlaces] = useState();\r\n   useEffect(() => {\r\n      async function fetchPlaces() {\r\n         try {\r\n            const data = await sendRequest(\r\n               `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n            );\r\n            setLoadedPlaces(data.places);\r\n         } catch (err) {}\r\n      }\r\n      fetchPlaces();\r\n   }, [sendRequest, userId]);\r\n\r\n   function placeDeletedHandler(deletePid) {\r\n      setLoadedPlaces((prevPlaces) =>\r\n         prevPlaces.filter((p) => p.id !== deletePid)\r\n      );\r\n   }\r\n   return (\r\n      <>\r\n         <ErrorModal error={error} onClear={clearError} />\r\n         {isLoading && (\r\n            <div className=\"center\">\r\n               <LoadingSpinner />\r\n            </div>\r\n         )}\r\n         {!isLoading && loadedPlaces && (\r\n            <PlaceList\r\n               items={loadedPlaces}\r\n               onDeletePlace={placeDeletedHandler}\r\n            />\r\n         )}\r\n      </>\r\n   );\r\n};\r\nexport default UserPlaces;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n   return (\n      <Modal\n         onCancel={props.onClear}\n         header=\"An Error Occurred!\"\n         show={!!props.error}\n         footer={<Button onClick={props.onClear}>Okay</Button>}\n      >\n         <p>{props.error}</p>\n      </Modal>\n   );\n};\n\nexport default ErrorModal;\n","import ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\nconst ModalOverlay = (props) => {\r\n   const content = (\r\n      <div className={`modal ${props.className}`} style={props.style}>\r\n         <header className={`modal__header ${props.headerClass}`}>\r\n            <h2>{props.header}</h2>\r\n         </header>\r\n         <form\r\n            onSubmit={\r\n               props.onSubmit\r\n                  ? props.onSubmit\r\n                  : (event) => event.preventDefault()\r\n            }\r\n         >\r\n            <div className={`modal__content ${props.contentClass}`}>\r\n               {props.children}\r\n            </div>\r\n            <footer className={`modal__footer ${props.footerClass}`}>\r\n               {props.footer}\r\n            </footer>\r\n         </form>\r\n      </div>\r\n   );\r\n   return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\nexport default function Modal(props) {\r\n   return (\r\n      <>\r\n         {props.show && <Backdrop onClick={props.onCancel} />}\r\n         <CSSTransition\r\n            in={props.show}\r\n            mountOnEnter\r\n            unmountOnExit\r\n            timeout={200}\r\n            classNames=\"modal\"\r\n         >\r\n            <ModalOverlay {...props} />\r\n         </CSSTransition>\r\n      </>\r\n   );\r\n}\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nexport function useHttpClient() {\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState(null);\r\n   const activeHttpRequests = useRef([]);\r\n   const sendRequest = useCallback(\r\n      async (url, method = \"GET\", body = null, headers = {}) => {\r\n         setIsLoading(true);\r\n         const httpAbortCtrl = new AbortController();\r\n         activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n         try {\r\n            const response = await fetch(url, {\r\n               method,\r\n               body,\r\n               headers,\r\n               signal: httpAbortCtrl.signal,\r\n            });\r\n            const data = await response.json();\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n               (re) => re !== httpAbortCtrl\r\n            );\r\n            if (!response.ok) throw new Error(data.message);\r\n            setIsLoading(false);\r\n            return data;\r\n         } catch (err) {\r\n            if (err.message !== \"The user aborted a request.\") {\r\n               setError(err.message);\r\n               setIsLoading(false);\r\n               throw error;\r\n            }\r\n         }\r\n      },\r\n      [error]\r\n   );\r\n   function clearError() {\r\n      setError(null);\r\n   }\r\n   useEffect(() => {\r\n      return () => {\r\n         try {\r\n            activeHttpRequests.current.forEach((abortCtrl) =>\r\n               abortCtrl.abort()\r\n            );\r\n         } catch (err) {}\r\n      };\r\n   }, []);\r\n   return { isLoading, error, sendRequest, clearError };\r\n}\r\n"],"names":["props","center","zoom","useEffect","map","window","google","maps","Map","mapRef","current","Marker","position","useRef","_jsx","ref","className","concat","style","PlaceItem","_ref","place","onDelete","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","_Fragment","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","location","reverse","danger","async","process","id","Authorization","token","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","inverse","openMapHandler","userId","creator","to","PlaceList","items","length","item","onDeletePlace","UserPlaces","useParams","loadedPlaces","setLoadedPlaces","data","places","err","fetchPlaces","deletePid","prevPlaces","filter","p","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","json","re","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}